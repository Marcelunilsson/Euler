"""
Highly divisible triangular number
Problem 12

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

Answer:  76576500
Completed on Sun, 24 Jun 2018, 21:33

"""

# A timer to performance test the solutions
from timeit import default_timer as ti
from functools import reduce
# numpy to make calculations
import numpy as np
from numpy import array
import os.path as op

# Solution 1
def tn500d():
    tn, n, c = 0, 1, 0
    while c < 500:
        dn, c = 1, 0
        tn += n
        step = 2 if tn%2 else 1
        while dn**2 <= tn:
            if tn % dn == 0:
                c += 2
            dn += step
        n += 1
    return tn


t11 = ti()
print(f"The answer to Project Euler, {op.basename(__file__)[:-3]} is: " + str(tn500d()))
t12 = ti()
print("Time lapsed for solution number 1: " + str((t12-t11)*10**6) + u'\u03BC' + "s")